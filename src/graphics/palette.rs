use std::{fmt::Display, ops::Index, str::FromStr};

use serde::{self, Deserialize, Serialize};
use serde_big_array::BigArray;

use super::{Color, ColorIndex, PALETTE_COLORS};
use crate::BYTES_PER_PIXEL;

#[derive(Clone, Copy, Debug, Default, Serialize, Deserialize, PartialEq, Eq)]
pub struct PaletteIndex(pub u8);

impl FromStr for PaletteIndex {
    type Err = &'static str;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        if let Ok(num) = s.parse() {
            Ok(Self(num))
        } else {
            Err("couldn't parse PaletteIndex from str")
        }
    }
}

impl Display for PaletteIndex {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        self.0.fmt(f)
    }
}
#[derive(Clone, Debug, Serialize, Deserialize)]
pub struct Palette {
    #[serde(with = "BigArray")]
    pub colors: [Color; PALETTE_COLORS],
}

impl Index<ColorIndex> for Palette {
    type Output = Color;

    fn index(&self, index: ColorIndex) -> &Self::Output {
        &self.colors[index.0 as usize]
    }
}

impl Palette {
    /// Gets the raw color, ignoring any kind of transparency
    pub fn color(&self, color_index: ColorIndex) -> Color {
        self[color_index]
    }

    // TODO: could be optimized using unint stuff?
    pub fn as_pixel_colors(&self) -> [[u8; BYTES_PER_PIXEL]; PALETTE_COLORS] {
        self.colors.map(|color| color.into_pixel_data())
    }

    pub fn default_palette_collection() -> Vec<Palette> {
        vec![
            Self::resurrect64(),
            // Self::aap64(),
            // Self::journey(),
            // Self::endesga64(),
            // Self::famicube(),
            // Self::blknx64(),
            // Self::tpp20(),
            // Self::sweetcanyonextended64(),
            // Self::pastel64(),
            // Self::rewild64(),
        ]
    }

    pub fn resurrect64() -> Self {
        Self {
            colors: [
                Color::from_hex(0x2e222f),
                Color::from_hex(0x3e3546),
                Color::from_hex(0x625565),
                Color::from_hex(0x966c6c),
                Color::from_hex(0xab947a),
                Color::from_hex(0x694f62),
                Color::from_hex(0x7f708a),
                Color::from_hex(0x9babb2),
                Color::from_hex(0xc7dcd0),
                Color::from_hex(0xffffff),
                Color::from_hex(0x6e2727),
                Color::from_hex(0xb33831),
                Color::from_hex(0xea4f36),
                Color::from_hex(0xf57d4a),
                Color::from_hex(0xae2334),
                Color::from_hex(0xe83b3b),
                Color::from_hex(0xfb6b1d),
                Color::from_hex(0xf79617),
                Color::from_hex(0xf9c22b),
                Color::from_hex(0x7a3045),
                Color::from_hex(0x9e4539),
                Color::from_hex(0xcd683d),
                Color::from_hex(0xe6904e),
                Color::from_hex(0xfbb954),
                Color::from_hex(0x4c3e24),
                Color::from_hex(0x676633),
                Color::from_hex(0xa2a947),
                Color::from_hex(0xd5e04b),
                Color::from_hex(0xfbff86),
                Color::from_hex(0x165a4c),
                Color::from_hex(0x239063),
                Color::from_hex(0x1ebc73),
                Color::from_hex(0x91db69),
                Color::from_hex(0xcddf6c),
                Color::from_hex(0x313638),
                Color::from_hex(0x374e4a),
                Color::from_hex(0x547e64),
                Color::from_hex(0x92a984),
                Color::from_hex(0xb2ba90),
                Color::from_hex(0x0b5e65),
                Color::from_hex(0x0b8a8f),
                Color::from_hex(0x0eaf9b),
                Color::from_hex(0x30e1b9),
                Color::from_hex(0x8ff8e2),
                Color::from_hex(0x323353),
                Color::from_hex(0x484a77),
                Color::from_hex(0x4d65b4),
                Color::from_hex(0x4d9be6),
                Color::from_hex(0x8fd3ff),
                Color::from_hex(0x45293f),
                Color::from_hex(0x6b3e75),
                Color::from_hex(0x905ea9),
                Color::from_hex(0xa884f3),
                Color::from_hex(0xeaaded),
                Color::from_hex(0x753c54),
                Color::from_hex(0xa24b6f),
                Color::from_hex(0xcf657f),
                Color::from_hex(0xed8099),
                Color::from_hex(0x831c5d),
                Color::from_hex(0xc32454),
                Color::from_hex(0xf04f78),
                Color::from_hex(0xf68181),
                Color::from_hex(0xfca790),
                Color::from_hex(0xfdcbb0),
            ],
        }
    }
    pub fn aap64() -> Self {
        Self {
            colors: [
                Color::from_hex(0x060608),
                Color::from_hex(0x141013),
                Color::from_hex(0x3b1725),
                Color::from_hex(0x73172d),
                Color::from_hex(0xb4202a),
                Color::from_hex(0xdf3e23),
                Color::from_hex(0xfa6a0a),
                Color::from_hex(0xf9a31b),
                Color::from_hex(0xffd541),
                Color::from_hex(0xfffc40),
                Color::from_hex(0xd6f264),
                Color::from_hex(0x9cdb43),
                Color::from_hex(0x59c135),
                Color::from_hex(0x14a02e),
                Color::from_hex(0x1a7a3e),
                Color::from_hex(0x24523b),
                Color::from_hex(0x122020),
                Color::from_hex(0x143464),
                Color::from_hex(0x285cc4),
                Color::from_hex(0x249fde),
                Color::from_hex(0x20d6c7),
                Color::from_hex(0xa6fcdb),
                Color::from_hex(0xffffff),
                Color::from_hex(0xfef3c0),
                Color::from_hex(0xfad6b8),
                Color::from_hex(0xf5a097),
                Color::from_hex(0xe86a73),
                Color::from_hex(0xbc4a9b),
                Color::from_hex(0x793a80),
                Color::from_hex(0x403353),
                Color::from_hex(0x242234),
                Color::from_hex(0x221c1a),
                Color::from_hex(0x322b28),
                Color::from_hex(0x71413b),
                Color::from_hex(0xbb7547),
                Color::from_hex(0xdba463),
                Color::from_hex(0xf4d29c),
                Color::from_hex(0xdae0ea),
                Color::from_hex(0xb3b9d1),
                Color::from_hex(0x8b93af),
                Color::from_hex(0x6d758d),
                Color::from_hex(0x4a5462),
                Color::from_hex(0x333941),
                Color::from_hex(0x422433),
                Color::from_hex(0x5b3138),
                Color::from_hex(0x8e5252),
                Color::from_hex(0xba756a),
                Color::from_hex(0xe9b5a3),
                Color::from_hex(0xe3e6ff),
                Color::from_hex(0xb9bffb),
                Color::from_hex(0x849be4),
                Color::from_hex(0x588dbe),
                Color::from_hex(0x477d85),
                Color::from_hex(0x23674e),
                Color::from_hex(0x328464),
                Color::from_hex(0x5daf8d),
                Color::from_hex(0x92dcba),
                Color::from_hex(0xcdf7e2),
                Color::from_hex(0xe4d2aa),
                Color::from_hex(0xc7b08b),
                Color::from_hex(0xa08662),
                Color::from_hex(0x796755),
                Color::from_hex(0x5a4e44),
                Color::from_hex(0x423934),
            ],
        }
    }
    pub fn journey() -> Self {
        Self {
            colors: [
                Color::from_hex(0x050914),
                Color::from_hex(0x110524),
                Color::from_hex(0x3b063a),
                Color::from_hex(0x691749),
                Color::from_hex(0x9c3247),
                Color::from_hex(0xd46453),
                Color::from_hex(0xf5a15d),
                Color::from_hex(0xffcf8e),
                Color::from_hex(0xff7a7d),
                Color::from_hex(0xff417d),
                Color::from_hex(0xd61a88),
                Color::from_hex(0x94007a),
                Color::from_hex(0x42004e),
                Color::from_hex(0x220029),
                Color::from_hex(0x100726),
                Color::from_hex(0x25082c),
                Color::from_hex(0x3d1132),
                Color::from_hex(0x73263d),
                Color::from_hex(0xbd4035),
                Color::from_hex(0xed7b39),
                Color::from_hex(0xffb84a),
                Color::from_hex(0xfff540),
                Color::from_hex(0xc6d831),
                Color::from_hex(0x77b02a),
                Color::from_hex(0x429058),
                Color::from_hex(0x2c645e),
                Color::from_hex(0x153c4a),
                Color::from_hex(0x052137),
                Color::from_hex(0x0e0421),
                Color::from_hex(0x0c0b42),
                Color::from_hex(0x032769),
                Color::from_hex(0x144491),
                Color::from_hex(0x488bd4),
                Color::from_hex(0x78d7ff),
                Color::from_hex(0xb0fff1),
                Color::from_hex(0xfaffff),
                Color::from_hex(0xc7d4e1),
                Color::from_hex(0x928fb8),
                Color::from_hex(0x5b537d),
                Color::from_hex(0x392946),
                Color::from_hex(0x24142c),
                Color::from_hex(0x0e0f2c),
                Color::from_hex(0x132243),
                Color::from_hex(0x1a466b),
                Color::from_hex(0x10908e),
                Color::from_hex(0x28c074),
                Color::from_hex(0x3dff6e),
                Color::from_hex(0xf8ffb8),
                Color::from_hex(0xf0c297),
                Color::from_hex(0xcf968c),
                Color::from_hex(0x8f5765),
                Color::from_hex(0x52294b),
                Color::from_hex(0x0f022e),
                Color::from_hex(0x35003b),
                Color::from_hex(0x64004c),
                Color::from_hex(0x9b0e3e),
                Color::from_hex(0xd41e3c),
                Color::from_hex(0xed4c40),
                Color::from_hex(0xff9757),
                Color::from_hex(0xd4662f),
                Color::from_hex(0x9c341a),
                Color::from_hex(0x691b22),
                Color::from_hex(0x450c28),
                Color::from_hex(0x2d002e),
            ],
        }
    }
    pub fn endesga64() -> Self {
        Self {
            colors: [
                Color::from_hex(0xff0040),
                Color::from_hex(0x131313),
                Color::from_hex(0x1b1b1b),
                Color::from_hex(0x272727),
                Color::from_hex(0x3d3d3d),
                Color::from_hex(0x5d5d5d),
                Color::from_hex(0x858585),
                Color::from_hex(0xb4b4b4),
                Color::from_hex(0xffffff),
                Color::from_hex(0xc7cfdd),
                Color::from_hex(0x92a1b9),
                Color::from_hex(0x657392),
                Color::from_hex(0x424c6e),
                Color::from_hex(0x2a2f4e),
                Color::from_hex(0x1a1932),
                Color::from_hex(0x0e071b),
                Color::from_hex(0x1c121c),
                Color::from_hex(0x391f21),
                Color::from_hex(0x5d2c28),
                Color::from_hex(0x8a4836),
                Color::from_hex(0xbf6f4a),
                Color::from_hex(0xe69c69),
                Color::from_hex(0xf6ca9f),
                Color::from_hex(0xf9e6cf),
                Color::from_hex(0xedab50),
                Color::from_hex(0xe07438),
                Color::from_hex(0xc64524),
                Color::from_hex(0x8e251d),
                Color::from_hex(0xff5000),
                Color::from_hex(0xed7614),
                Color::from_hex(0xffa214),
                Color::from_hex(0xffc825),
                Color::from_hex(0xffeb57),
                Color::from_hex(0xd3fc7e),
                Color::from_hex(0x99e65f),
                Color::from_hex(0x5ac54f),
                Color::from_hex(0x33984b),
                Color::from_hex(0x1e6f50),
                Color::from_hex(0x134c4c),
                Color::from_hex(0x0c2e44),
                Color::from_hex(0x00396d),
                Color::from_hex(0x0069aa),
                Color::from_hex(0x0098dc),
                Color::from_hex(0x00cdf9),
                Color::from_hex(0x0cf1ff),
                Color::from_hex(0x94fdff),
                Color::from_hex(0xfdd2ed),
                Color::from_hex(0xf389f5),
                Color::from_hex(0xdb3ffd),
                Color::from_hex(0x7a09fa),
                Color::from_hex(0x3003d9),
                Color::from_hex(0x0c0293),
                Color::from_hex(0x03193f),
                Color::from_hex(0x3b1443),
                Color::from_hex(0x622461),
                Color::from_hex(0x93388f),
                Color::from_hex(0xca52c9),
                Color::from_hex(0xc85086),
                Color::from_hex(0xf68187),
                Color::from_hex(0xf5555d),
                Color::from_hex(0xea323c),
                Color::from_hex(0xc42430),
                Color::from_hex(0x891e2b),
                Color::from_hex(0x571c27),
            ],
        }
    }
    pub fn famicube() -> Self {
        Self {
            colors: [
                Color::from_hex(0x000000),
                Color::from_hex(0xe03c28),
                Color::from_hex(0xffffff),
                Color::from_hex(0xd7d7d7),
                Color::from_hex(0xa8a8a8),
                Color::from_hex(0x7b7b7b),
                Color::from_hex(0x343434),
                Color::from_hex(0x151515),
                Color::from_hex(0x0d2030),
                Color::from_hex(0x415d66),
                Color::from_hex(0x71a6a1),
                Color::from_hex(0xbdffca),
                Color::from_hex(0x25e2cd),
                Color::from_hex(0x0a98ac),
                Color::from_hex(0x005280),
                Color::from_hex(0x00604b),
                Color::from_hex(0x20b562),
                Color::from_hex(0x58d332),
                Color::from_hex(0x139d08),
                Color::from_hex(0x004e00),
                Color::from_hex(0x172808),
                Color::from_hex(0x376d03),
                Color::from_hex(0x6ab417),
                Color::from_hex(0x8cd612),
                Color::from_hex(0xbeeb71),
                Color::from_hex(0xeeffa9),
                Color::from_hex(0xb6c121),
                Color::from_hex(0x939717),
                Color::from_hex(0xcc8f15),
                Color::from_hex(0xffbb31),
                Color::from_hex(0xffe737),
                Color::from_hex(0xf68f37),
                Color::from_hex(0xad4e1a),
                Color::from_hex(0x231712),
                Color::from_hex(0x5c3c0d),
                Color::from_hex(0xae6c37),
                Color::from_hex(0xc59782),
                Color::from_hex(0xe2d7b5),
                Color::from_hex(0x4f1507),
                Color::from_hex(0x823c3d),
                Color::from_hex(0xda655e),
                Color::from_hex(0xe18289),
                Color::from_hex(0xf5b784),
                Color::from_hex(0xffe9c5),
                Color::from_hex(0xff82ce),
                Color::from_hex(0xcf3c71),
                Color::from_hex(0x871646),
                Color::from_hex(0xa328b3),
                Color::from_hex(0xcc69e4),
                Color::from_hex(0xd59cfc),
                Color::from_hex(0xfec9ed),
                Color::from_hex(0xe2c9ff),
                Color::from_hex(0xa675fe),
                Color::from_hex(0x6a31ca),
                Color::from_hex(0x5a1991),
                Color::from_hex(0x211640),
                Color::from_hex(0x3d34a5),
                Color::from_hex(0x6264dc),
                Color::from_hex(0x9ba0ef),
                Color::from_hex(0x98dcff),
                Color::from_hex(0x5ba8ff),
                Color::from_hex(0x0a89ff),
                Color::from_hex(0x024aca),
                Color::from_hex(0x00177d),
            ],
        }
    }
    pub fn blknx64() -> Self {
        Self {
            colors: [
                Color::from_hex(0x000000),
                Color::from_hex(0x12173d),
                Color::from_hex(0x293268),
                Color::from_hex(0x464b8c),
                Color::from_hex(0x6b74b2),
                Color::from_hex(0x909edd),
                Color::from_hex(0xc1d9f2),
                Color::from_hex(0xffffff),
                Color::from_hex(0xa293c4),
                Color::from_hex(0x7b6aa5),
                Color::from_hex(0x53427f),
                Color::from_hex(0x3c2c68),
                Color::from_hex(0x431e66),
                Color::from_hex(0x5d2f8c),
                Color::from_hex(0x854cbf),
                Color::from_hex(0xb483ef),
                Color::from_hex(0x8cff9b),
                Color::from_hex(0x42bc7f),
                Color::from_hex(0x22896e),
                Color::from_hex(0x14665b),
                Color::from_hex(0x0f4a4c),
                Color::from_hex(0x0a2a33),
                Color::from_hex(0x1d1a59),
                Color::from_hex(0x322d89),
                Color::from_hex(0x354ab2),
                Color::from_hex(0x3e83d1),
                Color::from_hex(0x50b9eb),
                Color::from_hex(0x8cdaff),
                Color::from_hex(0x53a1ad),
                Color::from_hex(0x3b768f),
                Color::from_hex(0x21526b),
                Color::from_hex(0x163755),
                Color::from_hex(0x008782),
                Color::from_hex(0x00aaa5),
                Color::from_hex(0x27d3cb),
                Color::from_hex(0x78fae6),
                Color::from_hex(0xcdc599),
                Color::from_hex(0x988f64),
                Color::from_hex(0x5c5d41),
                Color::from_hex(0x353f23),
                Color::from_hex(0x919b45),
                Color::from_hex(0xafd370),
                Color::from_hex(0xffe091),
                Color::from_hex(0xffaa6e),
                Color::from_hex(0xff695a),
                Color::from_hex(0xb23c40),
                Color::from_hex(0xff6675),
                Color::from_hex(0xdd3745),
                Color::from_hex(0xa52639),
                Color::from_hex(0x721c2f),
                Color::from_hex(0xb22e69),
                Color::from_hex(0xe54286),
                Color::from_hex(0xff6eaf),
                Color::from_hex(0xffa5d5),
                Color::from_hex(0xffd3ad),
                Color::from_hex(0xcc817a),
                Color::from_hex(0x895654),
                Color::from_hex(0x61393b),
                Color::from_hex(0x3f1f3c),
                Color::from_hex(0x723352),
                Color::from_hex(0x994c69),
                Color::from_hex(0xc37289),
                Color::from_hex(0xf29faa),
                Color::from_hex(0xffccd0),
            ],
        }
    }
    pub fn tpp20() -> Self {
        Self {
            colors: [
                Color::from_hex(0x140e1e),
                Color::from_hex(0x2d1a71),
                Color::from_hex(0x3257be),
                Color::from_hex(0x409def),
                Color::from_hex(0x70dbff),
                Color::from_hex(0xbfffff),
                Color::from_hex(0x3e32d5),
                Color::from_hex(0x6e6aff),
                Color::from_hex(0xa6adff),
                Color::from_hex(0xd8e0ff),
                Color::from_hex(0x652bbc),
                Color::from_hex(0xb44cef),
                Color::from_hex(0xec8cff),
                Color::from_hex(0xffcdff),
                Color::from_hex(0x480e55),
                Color::from_hex(0x941887),
                Color::from_hex(0xe444c3),
                Color::from_hex(0xff91e2),
                Color::from_hex(0x190c12),
                Color::from_hex(0x550e2b),
                Color::from_hex(0xaf102e),
                Color::from_hex(0xff424f),
                Color::from_hex(0xff9792),
                Color::from_hex(0xffd5cf),
                Color::from_hex(0x491d1e),
                Color::from_hex(0xaa2c1e),
                Color::from_hex(0xf66d1e),
                Color::from_hex(0xffae68),
                Color::from_hex(0xffe1b5),
                Color::from_hex(0x492917),
                Color::from_hex(0x97530f),
                Color::from_hex(0xdd8c00),
                Color::from_hex(0xfbc800),
                Color::from_hex(0xfff699),
                Color::from_hex(0x0c101b),
                Color::from_hex(0x0e3e12),
                Color::from_hex(0x38741a),
                Color::from_hex(0x6cb328),
                Color::from_hex(0xafe356),
                Color::from_hex(0xe4fca2),
                Color::from_hex(0x0d384c),
                Color::from_hex(0x177578),
                Color::from_hex(0x00bc9f),
                Color::from_hex(0x6becbd),
                Color::from_hex(0xc9fccc),
                Color::from_hex(0x353234),
                Color::from_hex(0x665d5b),
                Color::from_hex(0x998d86),
                Color::from_hex(0xcdbfb3),
                Color::from_hex(0xeae6da),
                Color::from_hex(0x2f3143),
                Color::from_hex(0x505d6d),
                Color::from_hex(0x7b95a0),
                Color::from_hex(0xa6cfd0),
                Color::from_hex(0xdfeae4),
                Color::from_hex(0x8d4131),
                Color::from_hex(0xcb734d),
                Color::from_hex(0xefaf79),
                Color::from_hex(0x9c2b3b),
                Color::from_hex(0xe45761),
                Color::from_hex(0xffffff),
                Color::from_hex(0x000000),
                Color::from_hex(0xe4162b),
                Color::from_hex(0xffff40),
            ],
        }
    }
    pub fn sweetcanyonextended64() -> Self {
        Self {
            colors: [
                Color::from_hex(0x0f0e11),
                Color::from_hex(0x2d2c33),
                Color::from_hex(0x40404a),
                Color::from_hex(0x51545c),
                Color::from_hex(0x6b7179),
                Color::from_hex(0x7c8389),
                Color::from_hex(0xa8b2b6),
                Color::from_hex(0xd5d5d5),
                Color::from_hex(0xeeebe0),
                Color::from_hex(0xf1dbb1),
                Color::from_hex(0xeec99f),
                Color::from_hex(0xe1a17e),
                Color::from_hex(0xcc9562),
                Color::from_hex(0xab7b49),
                Color::from_hex(0x9a643a),
                Color::from_hex(0x86482f),
                Color::from_hex(0x783a29),
                Color::from_hex(0x6a3328),
                Color::from_hex(0x541d29),
                Color::from_hex(0x42192c),
                Color::from_hex(0x512240),
                Color::from_hex(0x782349),
                Color::from_hex(0x8b2e5d),
                Color::from_hex(0xa93e89),
                Color::from_hex(0xd062c8),
                Color::from_hex(0xec94ea),
                Color::from_hex(0xf2bdfc),
                Color::from_hex(0xeaebff),
                Color::from_hex(0xa2fafa),
                Color::from_hex(0x64e7e7),
                Color::from_hex(0x54cfd8),
                Color::from_hex(0x2fb6c3),
                Color::from_hex(0x2c89af),
                Color::from_hex(0x25739d),
                Color::from_hex(0x2a5684),
                Color::from_hex(0x214574),
                Color::from_hex(0x1f2966),
                Color::from_hex(0x101445),
                Color::from_hex(0x3c0d3b),
                Color::from_hex(0x66164c),
                Color::from_hex(0x901f3d),
                Color::from_hex(0xbb3030),
                Color::from_hex(0xdc473c),
                Color::from_hex(0xec6a45),
                Color::from_hex(0xfb9b41),
                Color::from_hex(0xf0c04c),
                Color::from_hex(0xf4d66e),
                Color::from_hex(0xfffb76),
                Color::from_hex(0xccf17a),
                Color::from_hex(0x97d948),
                Color::from_hex(0x6fba3b),
                Color::from_hex(0x229443),
                Color::from_hex(0x1d7e45),
                Color::from_hex(0x116548),
                Color::from_hex(0x0c4f3f),
                Color::from_hex(0x0a3639),
                Color::from_hex(0x251746),
                Color::from_hex(0x48246d),
                Color::from_hex(0x69189c),
                Color::from_hex(0x9f20c0),
                Color::from_hex(0xe527d2),
                Color::from_hex(0xff51cf),
                Color::from_hex(0xff7ada),
                Color::from_hex(0xff9edb),
            ],
        }
    }
    pub fn pastel64() -> Self {
        Self {
            colors: [
                Color::from_hex(0x998276),
                Color::from_hex(0xc4c484),
                Color::from_hex(0xabd883),
                Color::from_hex(0xa2f2bd),
                Color::from_hex(0xb88488),
                Color::from_hex(0xd1b182),
                Color::from_hex(0xd4eb91),
                Color::from_hex(0xccfcc4),
                Color::from_hex(0x907699),
                Color::from_hex(0xc484a4),
                Color::from_hex(0xea8c79),
                Color::from_hex(0xf2e5a2),
                Color::from_hex(0x9a84b8),
                Color::from_hex(0xd182ca),
                Color::from_hex(0xeb91a8),
                Color::from_hex(0xffddc4),
                Color::from_hex(0x768d99),
                Color::from_hex(0x8484c4),
                Color::from_hex(0xc479ea),
                Color::from_hex(0xf2a2d7),
                Color::from_hex(0x84b8b4),
                Color::from_hex(0x82a2d1),
                Color::from_hex(0xa791eb),
                Color::from_hex(0xfbc8f5),
                Color::from_hex(0x7c957a),
                Color::from_hex(0x84c4a4),
                Color::from_hex(0x79d7ea),
                Color::from_hex(0xa2aff2),
                Color::from_hex(0xa2b884),
                Color::from_hex(0x82d189),
                Color::from_hex(0x91ebd4),
                Color::from_hex(0xc9e5fa),
                Color::from_hex(0xb8a784),
                Color::from_hex(0xb9ca89),
                Color::from_hex(0x91eb91),
                Color::from_hex(0xc9fce9),
                Color::from_hex(0x957686),
                Color::from_hex(0xc49484),
                Color::from_hex(0xeade7a),
                Color::from_hex(0xc3f2a2),
                Color::from_hex(0xb884af),
                Color::from_hex(0xd1828f),
                Color::from_hex(0xebbd91),
                Color::from_hex(0xf7f9c4),
                Color::from_hex(0x797699),
                Color::from_hex(0xb484c4),
                Color::from_hex(0xea79bb),
                Color::from_hex(0xf2a9a2),
                Color::from_hex(0x8495b8),
                Color::from_hex(0x9d82d1),
                Color::from_hex(0xea91eb),
                Color::from_hex(0xffc8d4),
                Color::from_hex(0x76958d),
                Color::from_hex(0x84b4c4),
                Color::from_hex(0x7982ea),
                Color::from_hex(0xd1a2f2),
                Color::from_hex(0x84b88d),
                Color::from_hex(0x82d1c4),
                Color::from_hex(0x91beeb),
                Color::from_hex(0xd2c6fa),
                Color::from_hex(0x969976),
                Color::from_hex(0x94c484),
                Color::from_hex(0x79eaa8),
                Color::from_hex(0xa2ebf2),
            ],
        }
    }
    pub fn rewild64() -> Self {
        Self {
            colors: [
                Color::from_hex(0x172038),
                Color::from_hex(0x253a5e),
                Color::from_hex(0x3c5e8b),
                Color::from_hex(0x4f8fba),
                Color::from_hex(0x73bed3),
                Color::from_hex(0xa4dddb),
                Color::from_hex(0x193024),
                Color::from_hex(0x245938),
                Color::from_hex(0x2b8435),
                Color::from_hex(0x62ac4c),
                Color::from_hex(0xa2dc6e),
                Color::from_hex(0xc5e49b),
                Color::from_hex(0x19332d),
                Color::from_hex(0x25562e),
                Color::from_hex(0x468232),
                Color::from_hex(0x75a743),
                Color::from_hex(0xa8ca58),
                Color::from_hex(0xd0da91),
                Color::from_hex(0x5f6d43),
                Color::from_hex(0x97933a),
                Color::from_hex(0xa9b74c),
                Color::from_hex(0xcfd467),
                Color::from_hex(0xd5dc97),
                Color::from_hex(0xd6dea6),
                Color::from_hex(0x382a28),
                Color::from_hex(0x43322f),
                Color::from_hex(0x564238),
                Color::from_hex(0x715a42),
                Color::from_hex(0x867150),
                Color::from_hex(0xb1a282),
                Color::from_hex(0x4d2b32),
                Color::from_hex(0x7a4841),
                Color::from_hex(0xad7757),
                Color::from_hex(0xc09473),
                Color::from_hex(0xd7b594),
                Color::from_hex(0xe7d5b3),
                Color::from_hex(0x341c27),
                Color::from_hex(0x602c2c),
                Color::from_hex(0x884b2b),
                Color::from_hex(0xbe772b),
                Color::from_hex(0xde9e41),
                Color::from_hex(0xe8c170),
                Color::from_hex(0x241527),
                Color::from_hex(0x411d31),
                Color::from_hex(0x752438),
                Color::from_hex(0xa53030),
                Color::from_hex(0xcf573c),
                Color::from_hex(0xda863e),
                Color::from_hex(0x1e1d39),
                Color::from_hex(0x402751),
                Color::from_hex(0x7a367b),
                Color::from_hex(0xa23e8c),
                Color::from_hex(0xc65197),
                Color::from_hex(0xdf84a5),
                Color::from_hex(0x090a14),
                Color::from_hex(0x10141f),
                Color::from_hex(0x151d28),
                Color::from_hex(0x202e37),
                Color::from_hex(0x394a50),
                Color::from_hex(0x577277),
                Color::from_hex(0x819796),
                Color::from_hex(0xa8b5b2),
                Color::from_hex(0xc7cfcc),
                Color::from_hex(0xebede9),
            ],
        }
    }
}

impl Default for Palette {
    fn default() -> Self {
        Self {
            colors: [Color::default(); PALETTE_COLORS],
        }
    }
}

// OLD 16 Color Palettes
// pub fn default_palette_collection() -> Vec<Palette> {
//     vec![
//         Self::bubblegum16(),
//         Self::islandjoy16(),
//         Self::pico8(),
//         Self::sweetie16(),
//         Self::na16(),
//         Self::steamlords(),
//         Self::endesga16(),
//         Self::vanillamilkshake(),
//     ]
// }

// pub fn bubblegum16() -> Self {
//     Self {
//         colors: [
//             Color::new(0x16, 0x17, 0x1a),
//             Color::new(0x7f, 0x06, 0x22),
//             Color::new(0xd6, 0x24, 0x11),
//             Color::new(0xff, 0x84, 0x26),
//             Color::new(0xff, 0xd1, 0x00),
//             Color::new(0xfa, 0xfd, 0xff),
//             Color::new(0xff, 0x80, 0xa4),
//             Color::new(0xff, 0x26, 0x74),
//             Color::new(0x94, 0x21, 0x6a),
//             Color::new(0x43, 0x00, 0x67),
//             Color::new(0x23, 0x49, 0x75),
//             Color::new(0x68, 0xae, 0xd4),
//             Color::new(0xbf, 0xff, 0x3c),
//             Color::new(0x10, 0xd2, 0x75),
//             Color::new(0x00, 0x78, 0x99),
//             Color::new(0x00, 0x28, 0x59),
//         ],
//     }
// }

// pub fn islandjoy16() -> Self {
//     Self {
//         colors: [
//             Color::new(0xff, 0xff, 0xff),
//             Color::new(0x6d, 0xf7, 0xc1),
//             Color::new(0x11, 0xad, 0xc1),
//             Color::new(0x60, 0x6c, 0x81),
//             Color::new(0x39, 0x34, 0x57),
//             Color::new(0x1e, 0x88, 0x75),
//             Color::new(0x5b, 0xb3, 0x61),
//             Color::new(0xa1, 0xe5, 0x5a),
//             Color::new(0xf7, 0xe4, 0x76),
//             Color::new(0xf9, 0x92, 0x52),
//             Color::new(0xcb, 0x4d, 0x68),
//             Color::new(0x6a, 0x37, 0x71),
//             Color::new(0xc9, 0x24, 0x64),
//             Color::new(0xf4, 0x8c, 0xb6),
//             Color::new(0xf7, 0xb6, 0x9e),
//             Color::new(0x9b, 0x9c, 0x82),
//         ],
//     }
// }

// pub fn pico8() -> Self {
//     Self {
//         colors: [
//             Color::new(0x00, 0x00, 0x00),
//             Color::new(0x1D, 0x2B, 0x53),
//             Color::new(0x7E, 0x25, 0x53),
//             Color::new(0x00, 0x87, 0x51),
//             Color::new(0xAB, 0x52, 0x36),
//             Color::new(0x5F, 0x57, 0x4F),
//             Color::new(0xC2, 0xC3, 0xC7),
//             Color::new(0xFF, 0xF1, 0xE8),
//             Color::new(0xFF, 0x00, 0x4D),
//             Color::new(0xFF, 0xA3, 0x00),
//             Color::new(0xFF, 0xEC, 0x27),
//             Color::new(0x00, 0xE4, 0x36),
//             Color::new(0x29, 0xAD, 0xFF),
//             Color::new(0x83, 0x76, 0x9C),
//             Color::new(0xFF, 0x77, 0xA8),
//             Color::new(0xFF, 0xCC, 0xAA),
//         ],
//     }
// }

// pub fn sweetie16() -> Self {
//     Self {
//         colors: [
//             Color::new(0x1a, 0x1c, 0x2c),
//             Color::new(0x5d, 0x27, 0x5d),
//             Color::new(0xb1, 0x3e, 0x53),
//             Color::new(0xef, 0x7d, 0x57),
//             Color::new(0xff, 0xcd, 0x75),
//             Color::new(0xa7, 0xf0, 0x70),
//             Color::new(0x38, 0xb7, 0x64),
//             Color::new(0x25, 0x71, 0x79),
//             Color::new(0x29, 0x36, 0x6f),
//             Color::new(0x3b, 0x5d, 0xc9),
//             Color::new(0x41, 0xa6, 0xf6),
//             Color::new(0x73, 0xef, 0xf7),
//             Color::new(0xf4, 0xf4, 0xf4),
//             Color::new(0x94, 0xb0, 0xc2),
//             Color::new(0x56, 0x6c, 0x86),
//             Color::new(0x33, 0x3c, 0x57),
//         ],
//     }
// }

// pub fn na16() -> Self {
//     Self {
//         colors: [
//             Color::new(0x8c, 0x8f, 0xae),
//             Color::new(0x58, 0x45, 0x63),
//             Color::new(0x3e, 0x21, 0x37),
//             Color::new(0x9a, 0x63, 0x48),
//             Color::new(0xd7, 0x9b, 0x7d),
//             Color::new(0xf5, 0xed, 0xba),
//             Color::new(0xc0, 0xc7, 0x41),
//             Color::new(0x64, 0x7d, 0x34),
//             Color::new(0xe4, 0x94, 0x3a),
//             Color::new(0x9d, 0x30, 0x3b),
//             Color::new(0xd2, 0x64, 0x71),
//             Color::new(0x70, 0x37, 0x7f),
//             Color::new(0x7e, 0xc4, 0xc1),
//             Color::new(0x34, 0x85, 0x9d),
//             Color::new(0x17, 0x43, 0x4b),
//             Color::new(0x1f, 0x0e, 0x1c),
//         ],
//     }
// }

// pub fn steamlords() -> Self {
//     Self {
//         colors: [
//             Color::new(0x21, 0x3b, 0x25),
//             Color::new(0x3a, 0x60, 0x4a),
//             Color::new(0x4f, 0x77, 0x54),
//             Color::new(0xa1, 0x9f, 0x7c),
//             Color::new(0x77, 0x74, 0x4f),
//             Color::new(0x77, 0x5c, 0x4f),
//             Color::new(0x60, 0x3b, 0x3a),
//             Color::new(0x3b, 0x21, 0x37),
//             Color::new(0x17, 0x0e, 0x19),
//             Color::new(0x2f, 0x21, 0x3b),
//             Color::new(0x43, 0x3a, 0x60),
//             Color::new(0x4f, 0x52, 0x77),
//             Color::new(0x65, 0x73, 0x8c),
//             Color::new(0x7c, 0x94, 0xa1),
//             Color::new(0xa0, 0xb9, 0xba),
//             Color::new(0xc0, 0xd1, 0xcc),
//         ],
//     }
// }

// pub fn endesga16() -> Self {
//     Self {
//         colors: [
//             Color::new(0xe4, 0xa6, 0x72),
//             Color::new(0xb8, 0x6f, 0x50),
//             Color::new(0x74, 0x3f, 0x39),
//             Color::new(0x3f, 0x28, 0x32),
//             Color::new(0x9e, 0x28, 0x35),
//             Color::new(0xe5, 0x3b, 0x44),
//             Color::new(0xfb, 0x92, 0x2b),
//             Color::new(0xff, 0xe7, 0x62),
//             Color::new(0x63, 0xc6, 0x4d),
//             Color::new(0x32, 0x73, 0x45),
//             Color::new(0x19, 0x3d, 0x3f),
//             Color::new(0x4f, 0x67, 0x81),
//             Color::new(0xaf, 0xbf, 0xd2),
//             Color::new(0xff, 0xff, 0xff),
//             Color::new(0x2c, 0xe8, 0xf4),
//             Color::new(0x04, 0x84, 0xd1),
//         ],
//     }
// }

// pub fn vanillamilkshake() -> Self {
//     Self {
//         colors: [
//             Color::new(0x28, 0x28, 0x2e),
//             Color::new(0x6c, 0x56, 0x71),
//             Color::new(0xd9, 0xc8, 0xbf),
//             Color::new(0xf9, 0x82, 0x84),
//             Color::new(0xb0, 0xa9, 0xe4),
//             Color::new(0xac, 0xcc, 0xe4),
//             Color::new(0xb3, 0xe3, 0xda),
//             Color::new(0xfe, 0xaa, 0xe4),
//             Color::new(0x87, 0xa8, 0x89),
//             Color::new(0xb0, 0xeb, 0x93),
//             Color::new(0xe9, 0xf5, 0x9d),
//             Color::new(0xff, 0xe6, 0xc6),
//             Color::new(0xde, 0xa3, 0x8b),
//             Color::new(0xff, 0xc3, 0x84),
//             Color::new(0xff, 0xf7, 0xa0),
//             Color::new(0xff, 0xf7, 0xe4),
//         ],
//     }
// }
